import boto3
import time
from datetime import datetime

logs = boto3.client('logs')

LOG_GROUP = '/aws/ecs/your-log-group'  # Replace with your actual log group
TOP_N = 5

def lambda_handler(event=None, context=None):
    now = datetime.utcnow()
    start_of_day = datetime(now.year, now.month, now.day)
    start_time = int(start_of_day.timestamp())
    end_time = int(now.timestamp())

    query = f"""
    fields @logStream
    | filter @timestamp >= {start_time * 1000}
    | stats count() as log_count by @logStream
    | sort log_count desc
    | limit {TOP_N}
    """

    response = logs.start_query(
        logGroupName=LOG_GROUP,
        startTime=start_time,
        endTime=end_time,
        queryString=query,
    )

    query_id = response['queryId']
    print(f"Started query: {query_id}")

    # Wait for query to complete
    timeout = time.time() + 60  # 60 seconds max wait
    while True:
        result = logs.get_query_results(queryId=query_id)
        if result['status'] == 'Complete':
            break
        if time.time() > timeout:
            print("Query timed out.")
            return
        time.sleep(2)

    # Print top log streams and their counts
    if not result['results']:
        print("No log data found.")
        return

    print("\nTop Log Streams Today:\n")
    for row in result['results']:
        log_stream = next(item['value'] for item in row if item['field'] == '@logStream')
        count = int(next(item['value'] for item in row if item['field'] == 'log_count'))
        print(f"{log_stream}: {count:,} log events")

