import boto3
import time
from datetime import datetime

logs = boto3.client('logs')

def list_all_log_groups():
    paginator = logs.get_paginator('describe_log_groups')
    for page in paginator.paginate():
        for group in page['logGroups']:
            yield group['logGroupName']

def execute(event, context):
    now = datetime.utcnow()
    start_of_day = datetime(now.year, now.month, now.day)
    start_ts = int(start_of_day.timestamp())
    end_ts = int(now.timestamp())

    query = """
    fields @logStream
    | stats count() as log_count by @logStream
    | sort log_count desc
    | limit 25
    """

    for log_group in list_all_log_groups():
        print(f"\nRunning query for log group: {log_group}")

        try:
            res = logs.start_query(
                logGroupName=log_group,
                startTime=start_ts,
                endTime=end_ts,
                queryString=query,
            )
            query_id = res['queryId']
            print(f"  â†’ Query started: {query_id}")

            # Timeout after 60 seconds
            timeout = 60
            start_time = time.time()

            while True:
                result = logs.get_query_results(queryId=query_id)
                if result['status'] == 'Complete':
                    break
                if time.time() - start_time > timeout:
                    print(f"  Timeout reached for {log_group}, skipping...")
                    result = None
                    break
                time.sleep(2)

            if result and result['results']:
                print(f"  Top 25 log streams for {log_group}:")
                for row in result['results']:
                    log_stream = next(i['value'] for i in row if i['field'] == '@logStream')
                    count = int(next(i['value'] for i in row if i['field'] == 'log_count'))
                    print(f"    - {log_stream}: {count}")
            else:
                print(f"  No results or query incomplete for {log_group}.")

        except Exception as e:
            print(f"  Error querying {log_group}: {e}")
